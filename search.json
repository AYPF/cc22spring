[{"path":"index.html","id":"welcome","chapter":"1 Welcome!","heading":"1 Welcome!","text":"Let’s add content welcome page.Submit pull request .construction","code":""},{"path":"community-contribution.html","id":"community-contribution","chapter":"2 Community Contribution","heading":"2 Community Contribution","text":"fairly open-ended assignment provides opportunity receive credit contributing collective learning class, perhaps beyond. reflect minimum 3 hours work. complete assignment must submit short description contribution. appropriate, attach relevant files.many ways can contribute:organize lead workshop particular topic (date may assignment due date need schedule )help students find final project partnersgive well-rehearsed 5 minute lightning talk class datavis topic (theory tool) (email set date – may assignment due date need schedule )create video tutorial (length)create cheatsheet resourcewrite tutorial tool ’s well documentedbuild viz product (ex. htmlwidget RStudio add-) class use[idea](Note: translations allowed)may draw expand existing resources. , critical cite sources.","code":""},{"path":"community-contribution.html","id":"important-logistics","chapter":"2 Community Contribution","heading":"2.1 IMPORTANT LOGISTICS","text":"","code":""},{"path":"community-contribution.html","id":"groups","chapter":"2 Community Contribution","heading":"2.1.1 Groups","text":"may work partner choosing. work alone, need join group 1, simply submit work CourseWorks solo assignment.work partner, add group CC page People tab. Ed Discussion can used find partners similar interests.","code":""},{"path":"community-contribution.html","id":"what-to-submit","chapter":"2 Community Contribution","heading":"2.1.2 What to submit","text":"cases something tangible upload, tutorial, cheatsheet, etc. Alternatively may submit link material online (YouTube video, etc.) ’s nothing tangible include longer description (see 2.).cases something tangible upload, tutorial, cheatsheet, etc. Alternatively may submit link material online (YouTube video, etc.) ’s nothing tangible include longer description (see 2.).explanation motivation project, need addresses, evaluation project including learned / might differently next time. (1/2 page)explanation motivation project, need addresses, evaluation project including learned / might differently next time. (1/2 page)","code":""},{"path":"community-contribution.html","id":"submitting-your-assignment","chapter":"2 Community Contribution","heading":"2.1.3 Submitting your assignment","text":"must submit assignment twice: CourseWorks (can graded) class, details follow.CourseWorks submission (assignment): submit work .Rmd rendered .pdf .html file, just problem sets. work lend format, write assignment text box .CourseWorks submission (assignment): submit work .Rmd rendered .pdf .html file, just problem sets. work lend format, write assignment text box .Class (GitHub) submission: detail provided separate assignment.Class (GitHub) submission: detail provided separate assignment.","code":""},{"path":"community-contribution.html","id":"grading","chapter":"2 Community Contribution","heading":"2.1.4 Grading","text":"graded quality work, originality, effort invested. sources used must cited.","code":""},{"path":"github-submission-instructions.html","id":"github-submission-instructions","chapter":"3 GitHub submission instructions","heading":"3 GitHub submission instructions","text":"chapter gives information need upload community contribution. Please read entire document carefully making submission. particular note fact bookdown requires different .Rmd format ’re used , must make changes beginning file described submitting.","code":""},{"path":"github-submission-instructions.html","id":"background","chapter":"3 GitHub submission instructions","heading":"3.1 Background","text":"web site makes use bookdown package render collection .Rmd files nicely formatted online book chapters subchapters. job submit slightly modified version community contribution .Rmd file GitHub repository source files web site stored. backend, admins divide chapters book sections order .community contribution different format, create short .Rmd file explains , includes links relevant files, slides, etc. can post GitHub repo (another online site.)","code":""},{"path":"github-submission-instructions.html","id":"preparing-your-.rmd-file","chapter":"3 GitHub submission instructions","heading":"3.2 Preparing your .Rmd file","text":"submit ONE Rmd file.completing modifications, .Rmd look like sample .Rmd.Create concise, descriptive name project. instance, name base_r_ggplot_graph something similar work contrasting/working base R graphics ggplot2 graphics. Check .Rmd filenames file make sure name isn’t already taken. project name words joined underscores, white space. Use .Rmd .rmd. addition, letters must lowercase. Create copy .Rmd file new name.Create concise, descriptive name project. instance, name base_r_ggplot_graph something similar work contrasting/working base R graphics ggplot2 graphics. Check .Rmd filenames file make sure name isn’t already taken. project name words joined underscores, white space. Use .Rmd .rmd. addition, letters must lowercase. Create copy .Rmd file new name.Completely delete YAML header (section top .Rmd includes name, title, date, output, etc.) including --- line.Completely delete YAML header (section top .Rmd includes name, title, date, output, etc.) including --- line.Choose short, descriptive, human readable title project title show table contents – look examples panel left. Capitalize first letter (“sentence case”). first line document, enter single hashtag, followed single whitespace, title. important follow format bookdown renders title header. use single # headers anywhere else document.Choose short, descriptive, human readable title project title show table contents – look examples panel left. Capitalize first letter (“sentence case”). first line document, enter single hashtag, followed single whitespace, title. important follow format bookdown renders title header. use single # headers anywhere else document.second line blank, followed name(s):\n# Base R vs. ggplot2\n\nAaron Burr Alexander Hamilton\n\ncontent starts . second line blank, followed name(s):project requires data, please use built-dataset read directly URL, :\ndf <- readr::read_csv(\"https://people.sc.fsu.edu/~jburkardt/data/csv/addresses.csv\")  absolutely must include data file, please use small one, many reasons desirable keep repository size small possible.project requires data, please use built-dataset read directly URL, :df <- readr::read_csv(\"https://people.sc.fsu.edu/~jburkardt/data/csv/addresses.csv\")  absolutely must include data file, please use small one, many reasons desirable keep repository size small possible.included setup chunk .Rmd file, please remember remove label setup chunk, .e., use:\n{r, include=FALSE}\ninstead :\n{r setup, include=FALSE}included setup chunk .Rmd file, please remember remove label setup chunk, .e., use:instead :project requires libraries installed included document, please adhere following conventions. evaluate install.packages() statements document. Consumers .Rmd file won’t want packages get installed knit document. Include library() statements top .Rmd file, title, name, setup, content. chapter requires installation package source (GitHub installation), please add comment identifying . Please mention well PR. example library() section install statements won’t evaluated:\n\n# remotes::install_github(\"twitter/AnomalyDetection\")\nlibrary(\"AnomalyDetection\") # must installed sourceIf project requires libraries installed included document, please adhere following conventions. evaluate install.packages() statements document. Consumers .Rmd file won’t want packages get installed knit document. Include library() statements top .Rmd file, title, name, setup, content. chapter requires installation package source (GitHub installation), please add comment identifying . Please mention well PR. example library() section install statements won’t evaluated:developed .Rmd file moving library() statements rest file content, highly recommended knit review document . may change namespace available section code development, causing function work exhibit unexpected behavior.file contain getwd() / setwd() calls (never use scripts anyway!) write statements.Want get fancy? See optional tweaks section .","code":"# Base R vs. ggplot2\n\nAaron Burr and Alexander Hamilton\n\nYour content starts here. {r, include=FALSE}{r setup, include=FALSE}\n# remotes::install_github(\"twitter/AnomalyDetection\")\nlibrary(\"AnomalyDetection\") # must be installed from source"},{"path":"github-submission-instructions.html","id":"submission-steps","chapter":"3 GitHub submission instructions","heading":"3.3 Submission steps","text":"submit work, following “Workflow #4” – submitting pull request someone else’s repository write access. Instructions available lecture slides topic well tutorial. repeated abbreviated form, specific instructions naming conventions, content information, important details.Fork cc22spring repo (repo) GitHub account.Fork cc22spring repo (repo) GitHub account.Clone/download forked repo local computer.Clone/download forked repo local computer.Create new branch name project name, case sample_project. skip step. merge PR doesn’t come branch. already forgot , check tutorial fix .Create new branch name project name, case sample_project. skip step. merge PR doesn’t come branch. already forgot , check tutorial fix .Copy modified .Rmd file name root directory branch. example, sample_project.Rmd.Copy modified .Rmd file name root directory branch. example, sample_project.Rmd.include .html file. (order bookdown package work, .Rmd files rendered behind scenes.)include .html file. (order bookdown package work, .Rmd files rendered behind scenes.)[OPTIONAL] resources (images) included project, create folder resources/. example, resources/sample_project/. Put resources files . sure change links .Rmd include resources/.../, example:\n![Test Photo](resources/sample_project/pumpkins.jpg)[OPTIONAL] resources (images) included project, create folder resources/. example, resources/sample_project/. Put resources files . sure change links .Rmd include resources/.../, example:![Test Photo](resources/sample_project/pumpkins.jpg)ready submit project, push branch remote repo. Follow tutorial create pull request.ready submit project, push branch remote repo. Follow tutorial create pull request.point back forth begin team managing pull requests. asked make changes, simply make changes local branch, save, commit, push GitHub. new commits added pull request; need , , create new pull request. (, based circumstances, make sense close pull request start new one, tell .)point back forth begin team managing pull requests. asked make changes, simply make changes local branch, save, commit, push GitHub. new commits added pull request; need , , create new pull request. (, based circumstances, make sense close pull request start new one, tell .)pull request merged, ’s fine delete local clone (folder) well forked repository GitHub account.pull request merged, ’s fine delete local clone (folder) well forked repository GitHub account.","code":""},{"path":"github-submission-instructions.html","id":"optional-tweaks","chapter":"3 GitHub submission instructions","heading":"3.4 Optional tweaks","text":"prefer links chapter open new tabs, add {target=\"_blank\"} link, :\n[edav.info](edav.info){target=\"_blank\"}prefer links chapter open new tabs, add {target=\"_blank\"} link, :[edav.info](edav.info){target=\"_blank\"}Note headers (##, ###, etc.) converted numbered headings : ## –> 3.1 ### –> 3.1.1  headings appear chapter subheadings sub-subheadings navigation panel left. Think logical structure users navigate chapter. recommend using ## ### headings since “sub-sub-subheadings” 4.1.3.4 generally unnecessary look messy.Note headers (##, ###, etc.) converted numbered headings : ## –> 3.1 ### –> 3.1.1  headings appear chapter subheadings sub-subheadings navigation panel left. Think logical structure users navigate chapter. recommend using ## ### headings since “sub-sub-subheadings” 4.1.3.4 generally unnecessary look messy.Unfortunately, ’s simple way preview chapter ’s actually merged project. (bookdown preview_chapter() option works entire book rendered least become complex require packages project grows.) really want preview , fork clone minimal bookdown repo, add .Rmd file, click “Build book” button Build tab (next Git), open .html files _book folder web browser see rendered book.  ’re interested bookdown options, see official reference book.  useful tweaks share? Submit issue PR.Unfortunately, ’s simple way preview chapter ’s actually merged project. (bookdown preview_chapter() option works entire book rendered least become complex require packages project grows.) really want preview , fork clone minimal bookdown repo, add .Rmd file, click “Build book” button Build tab (next Git), open .html files _book folder web browser see rendered book.  ’re interested bookdown options, see official reference book.  useful tweaks share? Submit issue PR.","code":""},{"path":"github-submission-instructions.html","id":"faq","chapter":"3 GitHub submission instructions","heading":"3.5 FAQ","text":"","code":""},{"path":"github-submission-instructions.html","id":"what-should-i-expect-after-creating-a-pull-request","chapter":"3 GitHub submission instructions","heading":"3.5.1 What should I expect after creating a pull request?","text":"Within week create pull request, apply label assign classmate “PR merger” review files submit see meet requirements.Within week create pull request, apply label assign classmate “PR merger” review files submit see meet requirements.take time can process pull requests, long see pull request repo, don’t worry.take time can process pull requests, long see pull request repo, don’t worry.PR merger contacts regarding pull request, usually means files fail meet requirements. explain wrong, please fix soon possible.PR merger contacts regarding pull request, usually means files fail meet requirements. explain wrong, please fix soon possible.","code":""},{"path":"github-submission-instructions.html","id":"what-if-i-catch-mistakes-before-my-pull-request-is-merged","chapter":"3 GitHub submission instructions","heading":"3.5.2 What if I catch mistakes before my pull request is merged?","text":"Just make changes branch, commit push GitHub. automatically added pull request.","code":""},{"path":"github-submission-instructions.html","id":"what-if-i-catch-mistakes-after-my-pull-request-is-merged","chapter":"3 GitHub submission instructions","heading":"3.5.3 What if I catch mistakes after my pull request is merged?","text":"may submit additional pull requests fix material site. edits small, fixing typos, easiest make edits directly GitHub, following instructions. merge first pull requests edits, please patient.","code":""},{"path":"github-submission-instructions.html","id":"other-questions","chapter":"3 GitHub submission instructions","heading":"3.5.4 Other questions","text":"additional questions, please ask Discussions section respond.Thank contributions!","code":""},{"path":"sample-project.html","id":"sample-project","chapter":"4 Sample project","heading":"4 Sample project","text":"Joe Biden Donald TrumpThis chapter gives sample layout Rmd file.Test Photo","code":""},{"path":"tmap-package.html","id":"tmap-package","chapter":"5 tmap package","heading":"5 tmap package","text":"Sihui Liang Yuxuan Fu","code":""},{"path":"tmap-package.html","id":"what-we-did","chapter":"5 tmap package","heading":"5.1 What we did","text":"purpose tmap cheatsheet provide comprehensive practical display usage tmap R package, one main geographic visualiation toolkits R platform.explore handbooks literatures different packages spatial data presentation, including raster, ggmap, sf, sp leaflet. choose one common packages give consecutive example tmap package.explore handbooks literatures different packages spatial data presentation, including raster, ggmap, sf, sp leaflet. choose one common packages give consecutive example tmap package.Structure cheat sheet includes purposes single functions arguments, simple map including mere geograghy, map adding colors cuts, interactive maps maps working facets.Structure cheat sheet includes purposes single functions arguments, simple map including mere geograghy, map adding colors cuts, interactive maps maps working facets.Download cheatsheet","code":""},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"graphics-cheatsheet-in-ggplot2","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6 Graphics cheatsheet in ggplot2","text":"Yuwei HuMotivation: main purpose create cheat sheet organizing statistical graphics (contains graphics mentioned class websites(1)) ggplot2. time, want show usage ggplot2 functions cheat sheet. means graphics mentioned document can created easily base R packages. cheat sheet divided ‘Distribution’, ‘Correlation’, ‘Ranking’, ‘Evolution’ ‘Flow’, five types graphic. find code, can firstly consider type graphic want draw choose code certain chart. think organized create graphics ggplot2 can control elements different graphs similar methods. However, due existing graphic packages, can draw graphs simpler code several lines ggplot2 code. Next time, may create cheat sheet simpler code graphics mentioned document.(1)https://r-graph-gallery.com/index.html","code":"\nlibrary(ggplot2)\nlibrary(gridExtra)\nlibrary(d3r)\nlibrary(dplyr)\nlibrary(forcats)\nlibrary(Lock5withR)\nlibrary(ggridges)\nlibrary(broom)\nlibrary(plotly)\nlibrary(MASS)\nlibrary(gcookbook) \nlibrary(GGally)\nlibrary(parcoords)\nlibrary(ggmosaic)\nlibrary(ggalluvial)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"distribution","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.1 Distribution","text":"","code":""},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"histogram","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.1.1 histogram","text":"","code":"\ndata=data.frame(x=sample(0:20,100,replace = T))\n# basic histogram\ngh<-ggplot(data, aes(x)) + \n  geom_histogram()+\n  ggtitle(\"basic histogram\")+\n  theme_grey(8)\n\n# add color, bin width and bin center\ng1<-ggplot(data, aes(x)) + \n  geom_histogram(color = \"blue\", fill = \"lightblue\", binwidth = 5, center = 0)+\n  ggtitle(\"binwidth=5 and centered at 0\")+\n  theme_grey(8)\n\n# unequal bin widths\ng2<-ggplot(data, aes(x)) +\n  geom_histogram(color = \"blue\", fill = \"lightblue\", breaks=c(0,2,5,10, 20))+\n  ggtitle(\"unequal bin widths\")+\n  theme_grey(8)\n\n\n# density histogram\ngd<-ggplot(data, aes(x)) + \n  geom_histogram(aes(y = ..density..),color = \"blue\", fill = \"lightblue\")+\n  geom_density(color = \"red\") +\n  ggtitle(\"density histogram\")+\n  theme_grey(8)\n\n# Cumulative frequency histogram\ngc<-ggplot(data, aes(x)) +\n  geom_histogram(aes(y = cumsum(..count..)), color = \"blue\", fill = \"lightblue\") +\n  ggtitle(\"Cumulative Frequency\")+\n  theme_grey(8)\n\n\n# Bin boundaries: right closed/left closed\ngr<-ggplot(data, aes(x)) + \n  geom_histogram(color = \"blue\", fill = \"lightblue\", binwidth = 1, center = 0.5, closed = \"right\") +\n  ggtitle(\"right closed\")+\n  theme_grey(8)\n\ngl<-ggplot(data, aes(x)) + \n  geom_histogram(color = \"blue\", fill = \"lightblue\", binwidth = 1, center = 0.5, closed = \"left\") +\n  ggtitle(\"left closed\")+\n  theme_grey(8)\n\n# histogram with several groups\n# source: https://r-graph-gallery.com/histogram_several_group.html\ngmulti<-ggplot(iris, aes(x=Sepal.Length, fill=Species)) +\n    geom_histogram( color=\"#e9ecef\", alpha=0.6, position = 'identity')+\n  ggtitle(\"histogram with several groups\")+\n  theme_grey(8)\n\ngrid.arrange(gh,g1, g2,gd, gc,gr, gl,gmulti,ncol=3, nrow =3)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"boxplot","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.1.2 boxplot","text":"","code":"\n# resource: https://r-graph-gallery.com/89-box-and-scatter-plot-with-ggplot2.html\ndata2 <- data.frame(\n  group=c( rep(\"A\",500), rep(\"B\",500), rep(\"B\",500), rep(\"C\",20), rep('D', 100)  ),\n  value=c( rnorm(500, 10, 5), rnorm(500, 13, 1), rnorm(500, 18, 1), rnorm(20, 25, 4), rnorm(100, 12, 1) )\n)\n# basic\ngs<-ggplot(data, aes(x)) + \n  geom_boxplot()+\n  ggtitle(\"basic boxplot\")+\n  theme_grey(10)\n\ngm<-ggplot(data2, aes(group, value)) + \n  geom_boxplot()+\n  ggtitle(\"basic boxplot by group\")+\n  theme_grey(10)\n\n\n# reorder by median\ngorder<-ggplot(data2) + \n  geom_boxplot(aes(x = reorder(group, -value, median),y = value)) +\n  ggtitle(\"order by median with variable width boxplots\")+\n  theme_grey(10)\n\n# variable width boxplots\ngwidth<-ggplot(data2) + \n  geom_boxplot(aes(group,value),varwidth = TRUE) +\n  ggtitle(\"variable width boxplots\")+\n  theme_grey(10)\n\n# horizontal boxplots\nghorizontal<-ggplot(data2) + \n  geom_boxplot(aes(group,value)) +\n  coord_flip()+\n  ggtitle(\"horizontal boxplots\")+\n  theme_grey(10)\n\ngrid.arrange(gs, gm,gorder, gwidth,ghorizontal,ncol=3, nrow =2)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"violin-plots-ridgeline-plot-vs-boxplot","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.1.3 Violin plots, ridgeline plot vs boxplot","text":"","code":"\n# basic violin plots with color\ngv<-ggplot(data2) + \n  geom_violin(aes(group,value, fill=group),adjust = 6)+ \n  ggtitle(\"violin plots\")\n\n# basic ridgeline plot\ngr<-ggplot(data2) +\n  geom_density_ridges(aes(value,group, fill=group), alpha = .5, scale = 1)+\n  ggtitle(\"ridgeline plot\")\n\ngrid.arrange(gv, gr,gm,ncol=2, nrow =2)\ngsca<-ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width,color = Species)) + \n  geom_point()+\n  ggtitle(\"colored Scatterplot\")+\n  theme_grey(8)\n\ngscaadj<-ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) + \n  geom_point(alpha = 0.4, size = 0.8,pch = 21,stroke = 0)+\n  ggtitle(\"Scatterplot with adjusted alpha, size, pch, stroke\")+\n  theme_grey(8)\n\nglm<-ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) + \n  geom_point()+\n  geom_smooth(method = 'lm', se = FALSE) +\n  ggtitle(\"basic Scatterplot with linear model\")+\n  theme_grey(8)\n\n\nmod <- lm(Sepal.Width~Sepal.Length,iris)\nr2 <- summary(mod)$r.squared\n\ndf <- mod %>% augment()\ngrp<-ggplot(df, aes(.fitted, .std.resid)) + \n  geom_point()+\n  geom_hline(yintercept = 0, col = \"blue\")+\n  ggtitle(\"Residual plot\")+\n  theme_grey(8)\n\n# basic Scatterplot with facets\ngsf<-ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) + \n  geom_point()+\n  facet_wrap(~Species, ncol=3,scales = \"free_x\")+\n  ggtitle(\"basic Scatterplot with facets\")+\n  theme_grey(8)\n\ngrid.arrange(gsca,gscaadj,glm,grp,gsf,ncol=3, nrow =2)\n# Interactive\n\nggplotly(gsca)\n# scatterplot with heatmap and contour lines\nghh<-ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) + \n  scale_fill_viridis_c()+\n  geom_hex(binwidth = c(0.5, 0.5), alpha = .4)+\n  geom_point(size = 1)+\n  ggtitle(\"Scatterplot with Hex heatmap\")+\n  theme_grey(8)\n\ngsh<-ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) + \n  scale_fill_viridis_c()+\n  geom_bin2d(binwidth = c(0.5, 0.5), alpha = .4)+\n  geom_point(size = 1)+\n  ggtitle(\"Scatterplot with Square heatmap\")+\n  theme_grey(8)\n\ngcl<-ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) + \n  scale_fill_viridis_c()+\n  geom_density2d(colour=\"red\",bins = 5)+\n  geom_point(size = 1)+\n  ggtitle(\"Scatterplot with contour lines\")+\n  theme_grey(8)\n\ndata3<-data.frame(time = c(1,2,3,4,5,6,7,8,9,10),\n                  value = sample(1:50,10))\n# basic connected scatterplot\nggcs<-ggplot(data3, aes(x=time, y=value)) +\n    geom_line() +\n    geom_point()+\n  ggtitle(\"basic connected scatterplot\")+\n  theme_grey(8)\n\ngrid.arrange(ghh,gsh,gcl,ggcs,ncol=2, nrow =2)\n# 2D kernel\n\nf1 <- kde2d(iris$Sepal.Length, iris$Sepal.Width)\nimage(f1)\ncontour(f1, add = T)\npoints(iris$Sepal.Length, iris$Sepal.Width, pch = 16)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"heatmap","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.1.4 Heatmap","text":"","code":"\n# data from course notes\ngrade <- rep(c(\"first\", \"second\", \"third\", \"fourth\"), 3)\nsubject <- rep(c(\"math\", \"reading\", \"gym\"), each = 4)\nstatescore <- sample(50, 12) + 50\ndf <- data.frame(grade, subject, statescore)\n\n# basic heatmap\nghp<-ggplot(df, aes(grade, subject, fill = statescore))+ \n  geom_tile()+\n  ggtitle(\"basic heatmap\")+\n  theme_grey(8)\n\n# control color\nghpc<-ggplot(df, aes(grade, subject, fill = statescore)) + \n  geom_tile() +\n  scale_fill_gradient(low=\"white\", high=\"blue\")+\n  ggtitle(\"control color\")+\n  theme_grey(8)\n\ngrid.arrange(ghp,ghpc,ncol=2, nrow =1)\n# interactive\nggplotly(ghp)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"bubble-plot","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.1.5 Bubble plot","text":"","code":"\n# source: https://r-graph-gallery.com/320-the-basis-of-bubble-plot.html\nhead(StudentSurvey)##        Year Gender Smoke   Award HigherSAT Exercise TV Height Weight Siblings\n## 1    Senior      M    No Olympic      Math       10  1     71    180        4\n## 2 Sophomore      F   Yes Academy      Math        4  7     66    120        2\n## 3 FirstYear      M    No   Nobel      Math       14  5     72    208        2\n## 4    Junior      M    No   Nobel      Math        3  1     63    110        1\n## 5 Sophomore      F    No   Nobel    Verbal        3  3     65    150        1\n## 6 Sophomore      F    No   Nobel    Verbal        5  4     65    114        2\n##   BirthOrder VerbalSAT MathSAT  SAT  GPA Pulse Piercings    Sex\n## 1          4       540     670 1210 3.13    54         0   Male\n## 2          2       520     630 1150 2.50    66         3 Female\n## 3          1       550     560 1110 2.55   130         0   Male\n## 4          1       490     630 1120 3.10    78         0   Male\n## 5          1       720     450 1170 2.70    40         6 Female\n## 6          2       600     550 1150 3.20    80         4 Female\n# basic bubble plot\ngbp<-ggplot(StudentSurvey, aes(x=VerbalSAT, y=MathSAT, size = Exercise)) +\n  geom_point(alpha=0.5)+\n  ggtitle(\"basic bubble plot\")+\n  theme_grey(8)\n\n# Control circle size\ngbps<-ggplot(StudentSurvey, aes(x=VerbalSAT, y=MathSAT, size = Exercise)) +\n  geom_point(alpha=0.1)+\n  scale_size(range = c(.1, 10))+\n  ggtitle(\"control circle size\")+\n  theme_grey(8)\n\n# add the fourth dimension\ngbpd<-ggplot(StudentSurvey, aes(x=VerbalSAT, y=MathSAT, size = Exercise,color = Gender)) +\n  geom_point(alpha=0.5)+\n  ggtitle(\"add the fourth dimension\")+\n  theme_grey(8)\n\ngrid.arrange(gbp,gbps,gbpd,ncol=2, nrow =2)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"ranking","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.2 Ranking","text":"","code":""},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"bar-chart","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.2.1 bar chart","text":"","code":"\n# with/without stat=\"identity\"\ngb1<-ggplot(data2,aes(x=group, y=value)) + \n  geom_bar(stat = \"identity\")+\n  ggtitle(\"with stat\")\n\ngb2<-ggplot(data2,aes(group)) + \n  geom_bar()+\n  ggtitle(\"without stat\")\n\n# order bar chart\ndata2$group<-factor(data2$group)\n\ngborder1<-ggplot(data2) +\n  geom_bar(aes(fct_infreq(group))) +\n  ggtitle(\"order the levels of x by decreasing frequency\")+\n  theme_grey(6)\n\ngborder2<-data2 %>%\n  group_by(group) %>%\n  summarize(sum = sum(value)) %>%\n  ggplot(aes(fct_reorder(group, sum, .desc = TRUE), sum))+\n  geom_bar(stat = \"identity\")+\n  ggtitle(\"reorder x by y\")+\n  theme_grey(6)\n\ngborder<-ggplot(data2, aes(x = fct_inorder(group), y = value)) +\n  geom_bar(stat = \"identity\")+\n  ggtitle(\"set level order of x to row order\")+\n  theme_grey(6)\n\ngborderm1<-ggplot(data2, aes(x = fct_relevel(group, \"C\"), y = value)) +\n  geom_bar(stat = \"identity\")+\n  ggtitle(\"manually set group C to the first\") +\n  theme_grey(6)\n\ngborderm2<-ggplot(data2, aes(x = fct_relevel(group, \"C\",after = 2), y = value)) +\n  geom_bar(stat = \"identity\")+\n  ggtitle(\"manually set group C after the second group\") +\n  theme_grey(6)\n\ngborderm3<-ggplot(data2, aes(x = fct_relevel(group, \"C\",after = Inf), y = value)) +\n  geom_bar(stat = \"identity\")+\n  ggtitle(\"manually set group C to the last\") +\n  theme_grey(6)\n\ngbrev<-ggplot(data2, aes(fct_rev(group))) +\n  geom_bar() +\n  coord_flip() +\n  ggtitle(\"reverse the order of factor levels of x\") +\n  theme_grey(6)\n\ngrid.arrange(gb1, gb2,gborder1, gborder2,gborder,gborderm1,gborderm2,gborderm3,gbrev,ncol=4, nrow =3)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"cleveland-dot-plot","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.2.2 Cleveland dot plot","text":"","code":"\n# resourse: https://r-graphics.org/recipe-bar-graph-dot-plot\n\ntophit <- tophitters2001[1:25, ]\n\ngc1<-ggplot(tophit, aes(x = avg, y = name)) +\n  geom_point()+\n  ggtitle(\"basic Cleveland dot plot\") +\n  theme_grey(8)\n\ngc2<-ggplot(tophit, aes(x = avg, y = fct_reorder(name, avg))) +\n  geom_point() +\n  ggtitle(\"ordered Cleveland dot plot\") +\n  theme_grey(8)\n\ngc3<-ggplot(tophit, aes(x = avg, y = fct_reorder(name, avg), color = lg)) +\n  geom_point() +\n  ggtitle(\"ordered Cleveland dot plot by color\") +\n  theme_grey(8)\n\ngc4<-ggplot(tophit, aes(x = avg, y = fct_reorder(name, avg))) +\n  geom_point() +\n  facet_grid(lg~.,scales = \"free_y\", space = \"free_y\") +\n  ggtitle(\"ordered Cleveland dot plot with facets\") +\n  theme_grey(8)\n\ngrid.arrange(gc1,gc2,gc3,gc4,ncol=2, nrow =2)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"parallel-coordinates-plot","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.2.3 Parallel coordinates plot","text":"","code":"\n# rescale + group\ngstd<-ggparcoord(iris, columns = 1:4,groupColumn = 5)+\n  ggtitle(\"substract mean & divide by sd\")+\n  theme_grey(8)\ngglo<-ggparcoord(iris, columns = 1:4,groupColumn = 5,scale = \"globalminmax\")+\n  ggtitle(\"No scaling\")+\n  theme_grey(8)\nguni<-ggparcoord(iris, columns = 1:4,groupColumn = 5,scale = \"uniminmax\")+\n  ggtitle(\"Standardize to Min = 0 and Max = 1\")+\n  theme_grey(8)\ngcenter<-ggparcoord(iris, columns = 1:4,groupColumn = 5,scale = \"center\")+\n  ggtitle(\"Standardize and center variables\")+\n  theme_grey(8)\n\n# change alpha\ngpcalpha<-ggparcoord(iris, columns = 1:4,alphaLines = .3)+\n  ggtitle(\"change alpha\")+\n  theme_grey(8)\n# Splines\ngpcspline<-ggparcoord(iris, columns = 1:4, splineFactor = 10) +\n  ggtitle(\"splines\")+\n  theme_grey(8)\n\n# Highlight a group\niriscolor <- iris %>%\nmutate(color = factor(ifelse(Species == \"setosa\",1,0))) %>%\narrange(color)\ngpchl<-ggparcoord(iriscolor, columns = 1:4, groupColumn = \"color\") +\n  scale_color_manual(values = c(\"grey70\", \"red\")) +\n  guides(color = FALSE) +\n  ggtitle(\"highlight setosa\")+\n  theme_grey(8)\n\ngrid.arrange(gstd,gglo,guni,gcenter,gpcalpha,gpcspline,gpchl,ncol=3, nrow =3)\n# interactive Parallel coordinates with arrangement by groups\n\niris %>% arrange(Species) %>%\nparcoords(\nrownames = F \n, brushMode = \"1D-axes\"\n, reorderable = T\n, queue = T\n, color = list(\ncolorBy = \"Region\"\n,colorScale = \"scaleOrdinal\"\n,colorScheme = \"schemeCategory10\"\n)\n, withD3 = TRUE\n, width = 1000\n, height = 400\n)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"mosaic-plot","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.2.4 Mosaic plot","text":"","code":"\n# Stacked bar chart\ngsbc<-ggplot(StudentSurvey, aes(x = Year, fill = Award)) +\n  geom_bar()+\n  ggtitle(\"Stacked bar chart\")+\n  theme_grey(8)\n\n# Mosaic plot (2 var)\n\ngmp2<-ggplot(StudentSurvey) +\n  geom_mosaic(aes(x = product(Year), fill = Award))+\n  ggtitle(\"Mosaic plot (2 var)\")+\n  theme_grey(8)\n\n# Mosaic plot (3 var)\ngmp3<-ggplot(StudentSurvey) +\n  geom_mosaic(aes(x = product(Year,Gender), fill = Award))+\n  ggtitle(\"Mosaic plot (3 var)\")+\n  theme_grey(8)\n\ngrid.arrange(gsbc,gmp2,gmp3,ncol=2, nrow =2)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"lollipop-plot","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.2.5 lollipop plot","text":"","code":"\n# source: https://r-graph-gallery.com/301-custom-lollipop-chart.html\n# basic lollipop plot\nglp<-ggplot(data3, aes(x=time, y=value)) +\n  geom_point() + \n  geom_segment( aes(x=time, xend=time, y=0, yend=value))+\n  ggtitle(\"basic lollipop plot\")+\n  theme_grey(8)\n\n# control marker\nglpm<-ggplot(data3, aes(x=time, y=value)) +\n  geom_point() + \n  geom_segment( aes(x=time, xend=time, y=0, yend=value))+\n  geom_point( size=5, color=\"red\", fill=alpha(\"orange\", 0.3), alpha=0.7, shape=21, stroke=2) +\n  ggtitle(\"control marker\")+\n  theme_grey(8)\n\n# control stem\nglps<-ggplot(data3, aes(x=time, y=value)) +\n  geom_point() + \n  geom_segment( aes(x=time, xend=time, y=0, yend=value),size=1, color=\"blue\",linetype=\"dotdash\" )+\n  ggtitle(\"control stem\")+\n  theme_grey(8)\n\n# control baseline\nglpb<-ggplot(data3, aes(x=time, y=value)) +\n  geom_point() + \n  geom_segment( aes(x=time, xend=time, y=20, yend=value))+\n  ggtitle(\"control baseline\")+\n  theme_grey(8)\n\ngrid.arrange(glp,glpm,glps,glpb,ncol=2, nrow =2)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"donut-chart-pie-chart","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.2.6 Donut chart, pie chart","text":"","code":"\n# source: https://r-graph-gallery.com/128-ring-or-donut-plot.html\ndata2$fraction = data2$value / sum(data2$value)\ndata2$ymax = cumsum(data2$fraction)\ndata2$ymin = c(0, head(data2$ymax, n=-1))\n\ngdc<-ggplot(data2, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=2, fill=group)) +\n  geom_rect() +\n  coord_polar(theta=\"y\")+\n  xlim(c(-1, 4))+\n  ggtitle(\"Donut chart\")+\n  theme_grey(8)\n\ngpc<-ggplot(data2, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=2, fill=group)) +\n  geom_rect() +\n  coord_polar(theta=\"y\")+\n  ggtitle(\"Pie chart\")+\n  theme_grey(8)\n\ngrid.arrange(gdc,gpc,ncol=2, nrow =1)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"evolution","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.3 Evolution","text":"","code":""},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"line-plotarea-chart","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.3.1 line plot/area chart","text":"","code":"\n# source: https://r-graph-gallery.com/line-chart-ggplot2.html\n# basic line plot\nglp<-ggplot(data3, aes(x=time, y=value)) +\n  geom_line()+\n  ggtitle(\"basic line plot\")+\n  theme_grey(8)\n\n# Customize\nglpc<-ggplot(data3, aes(x=time, y=value)) +\n  geom_line( color=\"#69b3a2\", size=2, alpha=0.9, linetype=2)+\n  ggtitle(\"customize line plot\")+\n  theme_grey(8)\n\n# basic area chart\ngac<-ggplot(data3, aes(x=time, y=value)) +\n  geom_area()+\n  ggtitle(\"basic area chart\")+\n  theme_grey(8)\n\ndata4<-data.frame(time = as.numeric(rep(seq(1,7),each=7)), \nvalue = runif(49, 10, 100) ,             \ngroup = rep(LETTERS[1:7],times=7)\n)\n\n# basic stacked area chart\ngsac<-ggplot(data4, aes(x=time, y=value, fill=group)) + \n  geom_area()+\n  ggtitle(\"basic stacked area chart\")+\n  theme_grey(8)\n\n# proportional stacked area chart\ndata4 <- data4  %>%\n  group_by(time, group) %>%\n  summarise(n = sum(value)) %>%\n  mutate(percentage = n / sum(n))\ngpsac<-ggplot(data4, aes(x=time, y=percentage, fill=group)) + \n  geom_area(alpha=0.6 , size=1, colour=\"black\")\n\ngrid.arrange(glp,glpc,gac,gsac,gpsac,ncol=3, nrow =2)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"flow","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.4 flow","text":"","code":""},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"alluvial-diagram","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.4.1 alluvial diagram","text":"","code":"\n# source: https://cran.r-project.org/web/packages/ggalluvial/vignettes/ggalluvial.html#:~:text=The%20ggalluvial%20package%20is%20a,the%20feedback%20of%20many%20users.\n\n# alluvial diagram example\n\ngad<-ggplot(as.data.frame(Titanic),aes(y = Freq, axis1 = Survived, axis2 = Sex, axis3 = Class)) +\n  geom_alluvium(aes(fill = Class),width = 0)+\n  geom_stratum(width = 1/8) +\n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)))+\n  ggtitle(\"alluvial diagram\")\n\n# change alluvium color\ngadc<-ggplot(as.data.frame(Titanic),aes(y = Freq, axis1 = Survived, axis2 = Sex, axis3 = Class)) +\n  geom_alluvium(aes(fill = Survived),width = 0)+\n  geom_stratum(width = 1/8) +\n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)))+\n  ggtitle(\"change alluvium color\")\n\ngrid.arrange(gad,gadc,ncol=1, nrow =2)"},{"path":"data-preprocessing-cheat-sheet-in-r.html","id":"data-preprocessing-cheat-sheet-in-r","chapter":"7 Data preprocessing cheat sheet in R","heading":"7 Data preprocessing cheat sheet in R","text":"Ying GaoThis cheat sheet provide basic steps students think follow new data comes order simply preprocess , including importing data, checking missing values, reshaping, etc.Depending different cases datasets, however, need consider different ways clean treat data. example, working missing values, might need figure whether data missing randomly characteristic specific reasons explain . Therefore, cheat sheet now limitation different situations students meet practical work. creating cheat sheet, process cleaning exploring data becomes clearer also found useful methods help understand data. can extended improved comprehensive future.Hope save time help getting sense easy start problem solving project!Click link cheat sheet:https://github.com/yg2804/rep/blob/main/data_preprocessing_cheat_sheet_in_r.pdf","code":""},{"path":"visualizing-geographical-time-series-data-with-messy-country-name.html","id":"visualizing-geographical-time-series-data-with-messy-country-name","chapter":"8 Visualizing Geographical Time Series Data With Messy Country Name","heading":"8 Visualizing Geographical Time Series Data With Messy Country Name","text":"Jiachen Liu, Hao Chang Yihui XieWith development internet acceleration Internationalization process, many data nowadays recorded based countries. better understand geographical information contained data, choropleth geographic heatmap sometimes unavoidable. Generally, geographic information required maps, information always data get hands . tutorial intented solve problem, helping adding location information(Longitude Latitude) simple country based data.tutorial, start data downloading directly International Disaster Data Center, death number international disasters past 122 years messy country names. use data show guide process data cleaning, adding location information, finally produce geographic heatmap time change shown animation.","code":"\nknitr::opts_chunk$set(echo = TRUE, message=FALSE)\nlibrary(tidyverse) \nlibrary(ggplot2)\nlibrary(maps)\nlibrary(readxl)\nlibrary(gganimate)\nlibrary(gifski)\nlibrary(plotly)\nlibrary(countrycode)"},{"path":"visualizing-geographical-time-series-data-with-messy-country-name.html","id":"data-reading","chapter":"8 Visualizing Geographical Time Series Data With Messy Country Name","heading":"8.1 Data Reading","text":", 50 columns data, focus “Year”, “Country”, “Total Deaths” tutorial. One thing might notice actually “Latitude” “Longitude” columns data, many NAs columns hence usable.","code":"\n# read in the dataset downloaded from the International Disaster Data Center\nraw_data <- readxl::read_xlsx(\"resources/visualizing_geographic_time_series/emdat_public_2022_03_19_query_uid-LV4CQy.xlsx\")\nhead(raw_data)## # A tibble: 6 × 50\n##   `Dis No`   Year  Seq   Glide `Disaster Group` `Disaster Subg…` `Disaster Type`\n##   <chr>      <chr> <chr> <lgl> <chr>            <chr>            <chr>          \n## 1 1900-9002… 1900  9002  NA    Natural          Climatological   Drought        \n## 2 1900-9001… 1900  9001  NA    Natural          Climatological   Drought        \n## 3 1902-0012… 1902  0012  NA    Natural          Geophysical      Earthquake     \n## 4 1902-0003… 1902  0003  NA    Natural          Geophysical      Volcanic activ…\n## 5 1902-0010… 1902  0010  NA    Natural          Geophysical      Volcanic activ…\n## 6 1903-0006… 1903  0006  NA    Natural          Geophysical      Mass movement …\n## # … with 43 more variables: `Disaster Subtype` <chr>,\n## #   `Disaster Subsubtype` <chr>, `Event Name` <chr>, Country <chr>, ISO <chr>,\n## #   Region <chr>, Continent <chr>, Location <chr>, Origin <chr>,\n## #   `Associated Dis` <chr>, `Associated Dis2` <chr>, `OFDA Response` <chr>,\n## #   Appeal <chr>, Declaration <chr>, `Aid Contribution` <lgl>,\n## #   `Dis Mag Value` <dbl>, `Dis Mag Scale` <chr>, Latitude <chr>,\n## #   Longitude <chr>, `Local Time` <chr>, `River Basin` <chr>, …"},{"path":"visualizing-geographical-time-series-data-with-messy-country-name.html","id":"data-processing","chapter":"8 Visualizing Geographical Time Series Data With Messy Country Name","heading":"8.2 Data Processing","text":"target step add location information data. simple way achieve find existing dataset containing countries Latitude/Longitude, merge data exiting data. good thought, data actually recording countries names different way existing data(e.g. write “United States America” “USA”). also common situation, deal problem, need clean countries’ names first can merge.existing dataset, recommend using data ggplot2 keep maps consistent.Read , country column existing dataset “region”.","code":"\n# Read in the existing data from ggplot 2 in \"latitude.longtitude.data\"\n\nlatitude.longtitude.data <- map_data(\"world\")\nhead(latitude.longtitude.data)##        long      lat group order region subregion\n## 1 -69.89912 12.45200     1     1  Aruba      <NA>\n## 2 -69.89571 12.42300     1     2  Aruba      <NA>\n## 3 -69.94219 12.43853     1     3  Aruba      <NA>\n## 4 -70.00415 12.50049     1     4  Aruba      <NA>\n## 5 -70.06612 12.54697     1     5  Aruba      <NA>\n## 6 -70.05088 12.59707     1     6  Aruba      <NA>"},{"path":"visualizing-geographical-time-series-data-with-messy-country-name.html","id":"countrycode-package","chapter":"8 Visualizing Geographical Time Series Data With Messy Country Name","heading":"8.2.1 Countrycode Package","text":"introduce package called “countrycode”. package written Arel-Bundock, Vincent, Nils Enevoldsen, CJ Yetman, standardizes country names 40 different coding schemes, helpful current situation. Let’s apply package data standardize .result output show countries’ names, along warning messages indicating countries fall matched.several reasons mismatching:First situation, countries small included package.(e.g. “Azores”, “Canary Islands”)Second situation, countries longer exist since data contains data 1900. (e.g. “Serbia Montenegro”, “Yemen P Dem Rep”)\n“Yemen P Dem Rep” merged “Yemen Arab Rep” 1990 called “Yemen” now.\n“Yemen P Dem Rep” merged “Yemen Arab Rep” 1990 called “Yemen” now.Third situation, show , need consider situation countries disintegrated past 122 years. (e.g. “Czechoslovakia”, “Yugoslavia”) situation, may need change data one country several. data information supporting us achieve type splitting. data supporting, might need find another way deal simply drop .\n“Serbia Montenegro” split two countries called “Serbia” “Montengro” 2006.\n“Yugoslavia” split six countries,“Slovenia”,“Croatia”, “Serbia”, “Montengro”, “Bosnia Herzegovina” “Macedonia”.\n“Czechoslovakia” split two countries, “Czech Republic” “Slovakia”, 1993.\n“Serbia Montenegro” split two countries called “Serbia” “Montengro” 2006.“Yugoslavia” split six countries,“Slovenia”,“Croatia”, “Serbia”, “Montengro”, “Bosnia Herzegovina” “Macedonia”.“Czechoslovakia” split two countries, “Czech Republic” “Slovakia”, 1993.","code":"\ncountryname(unique(raw_data$Country))\ncountryname(unique(latitude.longtitude.data$region))"},{"path":"visualizing-geographical-time-series-data-with-messy-country-name.html","id":"manual-adjustments","chapter":"8 Visualizing Geographical Time Series Data With Messy Country Name","heading":"8.2.2 Manual Adjustments","text":"Based three situation, manual adjustment(splitting) data, reread data.\nsplited countries ：“Czechoslovakia”， “Yugoslavia”，“Serbia Montenegro”.","code":"\n# data after splitting certain countries\ndatamap <- readxl::read_xlsx(\"resources/visualizing_geographic_time_series/cleared_data.xlsx\") \ndata_temp <- map_data(\"world\")\n\n# some manual adjustments\n\n# delete \"Micronesia (Federated States of)\" and \"Tuvalu\", which does not included in the existing data, hence do not have latitude and longitude information.\ndatamap_remove <- datamap[-which(datamap$Country %in% c(\"Micronesia (Federated States of)\",\"Tuvalu\")),]\n# manual match some small contries \ndatamap_remove$Country[datamap_remove$Country == \"Azores Islands\"] <- \"Azores\"\ndatamap_remove$Country[datamap_remove$Country == \"Canary Is\"] <- \"Canary Islands\"\n# merge \"Yemen P Dem Rep\" and \"Yemen Arab Rep\"\ndatamap_remove$Country[datamap_remove$Country %in% c(\"Yemen P Dem Rep\",\"Yemen Arab Rep\")] <- \"Yemen\"\n# Virgin Islands are one area in existing data, so merge together\ndatamap_remove$Country[datamap_remove$Country == \"Virgin Island (British)\"] <- \"Virgin Islands\"\ndatamap_remove$Country[datamap_remove$Country == \"Virgin Island (U.S.)\"] <- \"Virgin Islands\"\n# \"Hong Kong\" and \"Macao\" belong to China now\ndatamap_remove$Country[datamap_remove$Country == \"Hong Kong\"] <- \"China\"\ndatamap_remove$Country[datamap_remove$Country == \"Macao\"] <- \"China\"\n# \"Netherlands Antilles\" belongs to \"Caribbean Netherlands\", but does not have independent geographic information, so including it in \"Netherlands\"\ndatamap_remove$Country[datamap_remove$Country == \"Netherlands Antilles\"] <- \"Netherlands\"\n# same situation, including \"Saint Martin (French part)\" in \"Saint Martin\"\ndatamap_remove$Country[datamap_remove$Country == \"Saint Martin (French Part)\"] <- \"Saint Martin\"\n# \"Tokelau\" is belong to \"New Zealand\"\ndatamap_remove$Country[datamap_remove$Country == \"Tokelau\"] <- \"New Zealand\""},{"path":"visualizing-geographical-time-series-data-with-messy-country-name.html","id":"merge-data","chapter":"8 Visualizing Geographical Time Series Data With Messy Country Name","heading":"8.2.3 Merge Data","text":"clean country name column, already finished hardest part. Next step, can merge data existing geographic data.Now, finished processing data. hard time consuming process. required researching historical knowledge. shown steps, doable difficult may seems. Next step, can use processed data geographic information make heatmap.","code":"\n# adding a column called \"countryname\" to be the standard country names, and when mismatch then the country must be one of our adjusted countries, so just keep it as it is.\ndatamap_match <- datamap_remove %>% mutate(countryname = ifelse(is.na(countryname(datamap_remove$Country)),datamap_remove$Country,countryname(datamap_remove$Country)))\n# adding the column \"countryname\" to both data so they can be matched later.\ndata_match <- mutate(data_temp,countryname = ifelse(is.na(countryname(data_temp$region)),data_temp$region,countryname(data_temp$region)))\n# find those countries that is in both data, and create a data with them only\ndata_c_match <- data_match[data_match$countryname %in% unique(datamap_match$countryname),]\n\n# tidy our data to only including Year, Country, deaths, and also created a summarized column that is the percentage of death in each country each year.\ndatamap_raw = datamap_match %>%\n  group_by(Year) %>%\n  mutate(alldeaths = sum(`Total Deaths`, na.rm = T)) %>%\n  group_by(Year,countryname) %>%\n  summarize(deathsprop = sum(`Total Deaths`, na.rm = T)/alldeaths, deaths = sum(`Total Deaths`, na.rm = T)) %>%\n  unique()\nhead(datamap_raw)## # A tibble: 6 × 4\n## # Groups:   Year, countryname [6]\n##   Year  countryname deathsprop  deaths\n##   <chr> <chr>            <dbl>   <dbl>\n## 1 1900  Cape Verde   0.00868     11000\n## 2 1900  India        0.986     1250000\n## 3 1900  Jamaica      0.000260      330\n## 4 1900  Japan        0.0000237      30\n## 5 1900  Turkey       0.000110      140\n## 6 1900  US           0.00473      6000\n# summarized total death across years\ndatamap_rawall = datamap_match %>%\n  mutate(alldeaths = sum(`Total Deaths`, na.rm = T)) %>%\n  group_by(countryname) %>%\n  summarize(deathsprop = sum(`Total Deaths`, na.rm = T)/alldeaths, deaths = sum(`Total Deaths`, na.rm = T)) %>%\n  unique()\n# Merge Data!\n\n# create a list of all the countries\ncountry = sort(unique(data_c_match$countryname))\n# for each country, add year to create a basic dataframe\ndata = data.frame(Year = as.character(rep(seq(1900,2022), each = length(country))), Country = rep(country, 123))\n# merge in our disaster data, and set NAs to 0 represent 0 deaths in that country that year\ndata1 = data %>% left_join(datamap_raw, by = c('Country' = 'countryname', 'Year' = 'Year'))\ndata1[is.na(data1)] = 0\n# merge in the existing geographic data, and convert year to numbers\nrawdata = left_join(data_c_match,data1,by=c(\"countryname\" = \"Country\"))\nrawdata$Year = as.numeric(rawdata$Year)\n\n# A simpler way to produce a data for plotting\nrawalldata = left_join(data_c_match,datamap_rawall)\nhead(rawalldata)##       long      lat group order      region subregion countryname   deathsprop\n## 1 74.89131 37.23164     2    12 Afghanistan      <NA> Afghanistan 0.0007834703\n## 2 74.84023 37.22505     2    13 Afghanistan      <NA> Afghanistan 0.0007834703\n## 3 74.76738 37.24917     2    14 Afghanistan      <NA> Afghanistan 0.0007834703\n## 4 74.73896 37.28564     2    15 Afghanistan      <NA> Afghanistan 0.0007834703\n## 5 74.72666 37.29072     2    16 Afghanistan      <NA> Afghanistan 0.0007834703\n## 6 74.66895 37.26670     2    17 Afghanistan      <NA> Afghanistan 0.0007834703\n##   deaths\n## 1  25424\n## 2  25424\n## 3  25424\n## 4  25424\n## 5  25424\n## 6  25424"},{"path":"visualizing-geographical-time-series-data-with-messy-country-name.html","id":"mapping","chapter":"8 Visualizing Geographical Time Series Data With Messy Country Name","heading":"8.3 Mapping","text":"calculated log10 death numbers far away , hence color change clearer. good way handle data large range.","code":"\n# Read in backages\n# here is a basic world map without any external data\nggplot(data_temp, aes(x = long, y = lat, group = group))+\n  geom_polygon()+\n  theme_classic()\nplot1data = rawalldata\n\ng = ggplot(plot1data, aes(x = long, y = lat, group = group, text = countryname))+ \n  # take longitude and latitude as x and y, a certain region as a group\n  geom_polygon(aes(fill = log10(deaths)), color = 'black')+\n  # draw a map filled by log10(deaths), and separate each country by black lines\n  scale_fill_gradient(low = '#FFF68F',high = '#FC4902') +\n  # use a common used heat map color setting\n  labs(title = 'Total Death Number for Every Country From 1900-2022')+\n  # rename the plot\n  ggdark::dark_theme_bw()\n  # use a dark theme which can make the map more attractive\n\nggplotly(g, tooltip = c(\"text\",'fill')) # create a interactive plot shown it's name and death number"},{"path":"visualizing-geographical-time-series-data-with-messy-country-name.html","id":"time-series-data","chapter":"8 Visualizing Geographical Time Series Data With Messy Country Name","heading":"8.4 time series data","text":"end tutorial. Hope can help someway. questions thoughts, feel free reach us email github :)","code":"\nplot2data = rawdata\n\ng2 = ggplot(plot2data, aes(x = long, y = lat, group = group))+ \n  # the same as the setting with summary plot\n  geom_polygon(aes(fill = log10(deaths)), color = 'black')+\n  transition_manual(frames = Year) +\n  # use year as the animation parameter\n  scale_fill_gradient(low = '#FFF68F',high = '#FC4902') +\n  labs(title = paste('Year:','{current_frame}')) +\n  # make the title changes among different plot\n  ggdark::dark_theme_bw()\n\nanimate(g2,fps = 3)\n# set the fps=3 to make sure the that the plot will not change too quickly"},{"path":"plotly-package.html","id":"plotly-package","chapter":"9 Plotly package","heading":"9 Plotly package","text":"Eris Chai Juntian Zhang","code":"\nlibrary(plotly)\nlibrary(gapminder)\nlibrary(quantmod)"},{"path":"plotly-package.html","id":"motivation","chapter":"9 Plotly package","heading":"9.1 Motivation","text":"\nlecture, mentioned package plotly see plotly can create interactive plots R. learned lot ways create static plots , explore much create interactive plots. interested exploring plotly package providing information people also interested learning plotly package.\nproject, learned plot basic interactive plots scatter plot, line plot, boxplot, bar charts, histogram. also learned add custom controls adding buttons range sliders. Furthermore, also explored animation feature plotly package. might differently next time probably try learn packages can create interactive plots htmlwidgets, Shiny, D3, collapsibleTree, visNetwork.\n","code":""},{"path":"plotly-package.html","id":"creating-interactive-plot-using-plotly","chapter":"9 Plotly package","heading":"9.2 Creating Interactive plot using plotly","text":"\n \nfundamental interactive plot using plotly scatter plot, interactive feature added plot, can move mouse see specific values point.Plot_ly user-friendly function basic scatter plot can quickly extend create basic plots. use type mode arguments.\n1. scatter plot: type = ‘scatter’ , mode = ‘markers’\n2. line plot: type = ‘scatter’ , mode = ‘lines’\n3. bar chart: type = ‘bar’ , mode = ‘markers’\n4. histogram: type = ‘histogram’\n5. boxplot: type = ‘box’\nfollowing examples, just simply change type mode, can alter among basic plots.\n \nSometimes, one kinds plot satisfy needs, want combine several plots sharing axis, can show several perspective data together.\ncan firstly create several plots, useing subplot() combine inserting plots function specify axis share.","code":"\nplot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length, color = ~Species)\ntrace_0 <- rnorm(100, mean = 5)\ntrace_1 <- rnorm(100, mean = 0)\ntrace_2 <- rnorm(100, mean = -5)\nx <- c(1:100)\n\ndata <- data.frame(x, trace_0, trace_1, trace_2)\n\nfig_basic <- plot_ly(data, x = ~x, y = ~trace_0, name = 'trace 0', \n                     type = 'scatter',\n                     mode = 'lines') \nfig_basic <- fig_basic %>% \n  add_trace(y = ~trace_1, name = 'trace 1',\n            type = 'scatter',\n            mode = 'markers') \nfig_basic <- fig_basic %>% add_trace(y = ~trace_2, name = 'trace 2',\n                         type = 'scatter',\n                         mode = 'lines+markers')\nfig_basic\nscatter_plot <- plot_ly(iris, y = ~Petal.Length,\n                        type = \"scatter\" , mode = \"markers\") \nbox_plot<-plot_ly(iris,y = ~Petal.Length,type = \"box\") \nbar_plot<-plot_ly(iris,y = ~Petal.Length,type = \"bar\",mode = \"markers\") \n\nsubplot(box_plot,bar_plot,scatter_plot,shareY = TRUE)"},{"path":"plotly-package.html","id":"add-custom-control-in-plotly","chapter":"9 Plotly package","heading":"9.3 Add Custom Control in Plotly","text":"knowing basic knowledge plot_ly, can start add custom control, change helpful analysis data.","code":"\n#The basic plot\ndf_Japan<-gapminder[gapminder$country==\"Japan\",]\ngdpPercap_Japan<-data.frame(df_Japan$year,df_Japan$gdpPercap)\nfig_Japan<-plot_ly(gdpPercap_Japan, type = \"scatter\" , mode = \"lines\")\nfig_Japan_b0 <-fig_Japan %>%\n  add_trace(x = ~df_Japan.year, y = ~df_Japan.gdpPercap, name = 'Japan')\nfig_Japan_b0"},{"path":"plotly-package.html","id":"add-buttons","chapter":"9 Plotly package","heading":"9.3.1 Add Buttons","text":"1）restyle methods：modify dataIn example, show modify types plot buttons. choosing methods, can use \"args = list(\"type\", \"scatter\", \"lines\")\" set different chart types, second position insied thelistis attributed type, third position mode. can use \"updatemenus = list(chart_types)\" layout parts.\n \nchanging types plot, can also change color plot using \"args = list(\"line.color\", \"blue\")\" insides buttons function set different colors.\n \n2）Update Methods: update traces data diplayedIn next example, can choose show different columns data selecting different buttons. need carefully set args.\"list(visible = c(FALSE, TRUE))\"\"list(annotationslist(c(),df_J_I$gdpPercap_Japan)\"\ntwo parts need consistent , “FALSE” corresponds “c()”, “TRUE” corresponds column appears plot.\n \n","code":"\n#restlye the chart type\nchart_types <- list(\n  type = \"buttons\",\n  direction = \"right\",\n  xanchor = 'center',\n  yanchor = \"top\",\n  pad = list('r'= 0, 't'= 10, 'b' = 10),\n  x = 0.5,\n  y = 1.27,\n  buttons = list(\n    list(method = \"restyle\",\n         args = list(\"type\", \"scatter\", \"lines\"),\n         label = \"scatter-line\"),\n    list(method = \"restyle\",\n         args = list(\"type\", \"bar\"),\n         label = \"bar\")\n  ))\nfig_Japan_b1 <- fig_Japan_b0 %>% layout(\n  xaxis = list(domain = c(0.1, 1)),\n  yaxis = list(title = \"y\"),\n  updatemenus = list(chart_types))\nfig_Japan_b1\n#restlye the color\ncolor_types <- list(\n  type = \"buttons\",\n  direction = \"right\",\n  xanchor = 'center',\n  yanchor = \"top\",\n  pad = list('r'= 0, 't'= 10, 'b' = 10),\n  x = 0.5,\n  y = 1.17,\n  buttons = list(\n    list(method = \"restyle\",\n         args = list(\"line.color\", \"blue\"),\n         label =\"blue\" ),\n    list(method = \"restyle\",\n         args = list(\"line.color\", \"red\"),\n         label = \"red\" )\n  ))\nfig_Japan_b2 <- fig_Japan_b0 %>% layout(\n  xaxis = list(domain = c(0.1, 1)),\n  yaxis = list(title = \"y\"),\n  updatemenus = list(color_types))\nfig_Japan_b2\n##set the dataframe\ndf_Italy<-gapminder[gapminder$country==\"Italy\",]\ngdpPercap_Italy<-df_Italy$gdpPercap\ndf_J_I<-cbind(gdpPercap_Japan,gdpPercap_Italy)\ncolnames(df_J_I) <- c(\"year\",\"gdpPercap_Japan\",\"gdpPercap_Italy\")\nfig_J_I <- plot_ly(df_J_I, type = \"scatter\" , mode = \"lines\")\nfig_J_I<- fig_J_I %>% add_lines(x=~year, y=~gdpPercap_Japan, name=\"Japan\",\n            line=list(color=\"red\")) \nfig_J_I<- fig_J_I%>% add_lines(x=~year, y=~gdpPercap_Italy, name=\"Italy\",\n            line=list(color=\"blue\")) \n\nupdate_trace <- list(list(active = -1,type= 'buttons',\n    buttons = list(list(label = \"Japan\",\n                        method = \"update\",\n                        args = list(\n                          list(visible = c(FALSE, TRUE)),\n                          list(title = \"gdpPercap_Japan\",\n                               annotations = \n                                 list(c(),df_J_I$gdpPercap_Japan )))),\n                   list(label = \"Italy\",method = \"update\",\n                        args = list(\n                          list(visible = c(TRUE, FALSE)),\n                          list(title = \"gdpPercap_Italy\",\n                               annotations = \n                                 list(df_J_I$gdpPercap_Italy, c())))),\n                   list(label = \"Both\",method = \"update\",\n                        args = list(list(visible = c(TRUE, TRUE)),\n                                    list(title = \"gdpPercap\",\n                                         annotations = \n                                           list(df_J_I$gdpPercap_Japan,\n                                                df_J_I$gdpPercap_Italy)))))))\nfig_J_I_update <- fig_J_I %>% layout(title = \"gdpPercap\", showlegend=FALSE,\n                                     xaxis=list(title=\"YEAR\"),\n                                     yaxis=list(title=\"gdpPercap\"),\n                                     updatemenus=update_trace)\nfig_J_I_update"},{"path":"plotly-package.html","id":"add-range-slider","chapter":"9 Plotly package","heading":"9.3.2 Add Range Slider","text":"example shows add rangeslider basic plot. Except adding rangeslider layout() function, can simply use rangeslider()function “%>%”.\ndata set multiple time point, function can help us data change within different range time two direction moving side slider.\n \n","code":"\nfig_Japan1<-fig_Japan_b0 %>% \n  layout(xaxis = list(rangeslider = list(visible = T)))\nfig_Japan1"},{"path":"plotly-package.html","id":"add-range-selectors","chapter":"9 Plotly package","heading":"9.3.3 Add Range Selectors","text":"example, choose use data set multiple complex time point show custom control can help analysis data clearly useful graphs.\n \ninitial plot just show data change related time, want see change specific time range, use rangeselector.\nset range time, can add rangeselector inside layout() use buttons create time buttons include four parts.\nstep shows time move, three options (“year”,“month”,“day”); count can used set many steps want set. two part, time range set. stepmode, can choose “backward” “todate”. Finally, can use labelto set name buttons.","code":"\n##chose the adjusted price,get the dataframe we need\ngetSymbols(Symbols = \"AAPL\", from = '2017-01-01', to = '2019-01-01')## [1] \"AAPL\"\ndf_AAPL <- data.frame(Date = index(AAPL), AAPL[,6])\nfig_APPL<-plot_ly(df_AAPL,x=df_AAPL$Date,\n                  y=df_AAPL$AAPL.Adjusted, type= \"scatter\" , mode = \"lines\")\n##initial plot\nfig_APPL\nfig_APPL1 <- fig_APPL %>% layout(\n    title = \"Stock Prices\",\n    xaxis = list(\n      rangeselector = list(\n        buttons = list(\n          list(\n            count = 3,\n            label = \"3 mo\",\n            step = \"month\",\n            stepmode = \"backward\"),\n          list(\n            count = 1,\n            label = \"1 yr\",\n            step = \"year\",\n            stepmode = \"backward\"),\n          list(\n            count = 1,\n            label = \"YTD\",\n            step = \"year\",\n            stepmode = \"todate\"),\n          list(step = \"all\")))))\n\nfig_APPL1"},{"path":"plotly-package.html","id":"animation-in-plotly","chapter":"9 Plotly package","heading":"9.4 Animation in Plotly","text":"Since plot_ly() maps R objects plotly.js, web-based JavaScript interactive charting library, plot_ly gives us option animations data.","code":""},{"path":"plotly-package.html","id":"basic-animation","chapter":"9 Plotly package","heading":"9.4.1 Basic Animation","text":"Animations can created using frame argument plot_ly(). assigning discrete values frame, can create animation frames. animation frame, play button slider component controlling state animation created default. can play animation simply clicking play button dragging slider. pause animation, just click relevant location slider bar.\n \ncan try create animation basic example using Iris data. inputting Species frame, species cycled plot.\n \n","code":"\niris %>%\n  plot_ly(\n    x = ~Sepal.Length,\n    y = ~Petal.Length,\n    frame = ~Species,\n    type = 'scatter',\n    mode = 'markers',\n    showlegend = F\n    )"},{"path":"plotly-package.html","id":"mulitple-trace-animations","chapter":"9 Plotly package","heading":"9.4.2 Mulitple Trace Animations","text":"basic knowledge frame, can now apply useful scenario. example, want see relationship GDP per capita life expectancy changing time, clear way show animation can directly see data move time. Since done plotly, can utilize interactive feature use color fill continents. allow us select view specific continents animation.plot can see country Kuwait outlier, assignment, order see data clearly, usually just delete outlier, animation feature, can keep outlier see change time. playing animation, can see Kuwait change back forth GDP per capita, finally join big cluster.\n \nstill prefer see data clearly without deleting outlier, can log-transformation GDP per capita. use layout() modify xaxis change type type = \"log\". default xaxis type “-”, options “log”. can choose one following based needs \"-\", \"linear\", \"log\" \"date\",\"category\",\"multicategory\".","code":"\nfig_animation <- gapminder %>%\n  plot_ly(\n    x = ~gdpPercap, \n    y = ~lifeExp, \n    size = ~pop, \n    color = ~continent, \n    frame = ~year,\n    text = ~country, \n    hoverinfo = \"text\",\n    type = 'scatter',\n    mode = 'markers'\n  )\nfig_animation\nfig_animation %>% layout(\n    xaxis = list(\n      type = \"log\")\n  )"},{"path":"plotly-package.html","id":"configuration-options-in-animation","chapter":"9 Plotly package","heading":"9.4.3 Configuration Options in Animation","text":"\n \n\n \n\n \n\n \n","code":"\nfig_animation %>%\n  animation_opts(\n    frame=1000, \n    transition=0,\n    easing = \"sin\"\n  )"},{"path":"plotly-package.html","id":"references","chapter":"9 Plotly package","heading":"9.5 References","text":"https://plotly.com/r/\n \n","code":""},{"path":"github-initial-setup.html","id":"github-initial-setup","chapter":"10 Github initial setup","heading":"10 Github initial setup","text":"Joyce Robbins","code":""},{"path":"github-initial-setup.html","id":"create-new-repo","chapter":"10 Github initial setup","heading":"10.1 Create new repo","text":"Create new repository copying template: http://www.github.com/jtr13/cctemplate following instructions README.","code":""},{"path":"github-initial-setup.html","id":"pages-in-repo-settings","chapter":"10 Github initial setup","heading":"10.2 Pages in repo settings","text":"Change source gh-pagesMay trigger GHA get work","code":""},{"path":"github-initial-setup.html","id":"add-packages-to-description-file","chapter":"10 Github initial setup","heading":"10.3 Add packages to DESCRIPTION file","text":"Need better process…Downloaded submissions CourseWorksCreate DESCRIPTION file. Add add dependencies projthis::proj_update_deps()https://twitter.com/ijlyttle/status/1370776366585614342Add Imports real DESCRIPTION file.Found problematic packages looking reverse dependencies packages failed install:devtools::revdep()Also used pak::pkg_deps_tree()Problems:magickrJava dependency qdap","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"tutorial-for-pull-request-mergers","chapter":"11 Tutorial for pull request mergers","heading":"11 Tutorial for pull request mergers","text":"","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"general","chapter":"11 Tutorial for pull request mergers","heading":"11.1 General","text":"following checklist steps perform merging pull request. point, ’re sure , request review one PR leaders.","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"check-branch","chapter":"11 Tutorial for pull request mergers","heading":"11.2 Check branch","text":"PR submitted non-main branch.PR submitted main branch, provide instructions fix problem:Close PR.Close PR.Follow instructions forgetting branch committed pushed GitHub: https://edav.info/github#fixing-mistakesFollow instructions forgetting branch committed pushed GitHub: https://edav.info/github#fixing-mistakesIf trouble 2., delete local folder project, delete fork GitHub, start .trouble 2., delete local folder project, delete fork GitHub, start .Open new PR.Open new PR.","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"examine-files-that-were-added-or-modified","chapter":"11 Tutorial for pull request mergers","heading":"11.3 Examine files that were added or modified","text":"ONE .Rmd file.ONE .Rmd file.additional resources resources/<project_name>/ folder.additional resources resources/<project_name>/ folder.files root directory besides .Rmd file.files root directory besides .Rmd file.","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"check-.rmd-filename","chapter":"11 Tutorial for pull request mergers","heading":"11.4 Check .Rmd filename","text":".Rmd filename words joined underscores, white space. (Update: need branch name.).Rmd filename can contain lowercase letters. (Otherwise filenames sort nicely repo home page.)","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"check-.rmd-file-contents","chapter":"11 Tutorial for pull request mergers","heading":"11.5 Check .Rmd file contents","text":"file contain YAML header --- line.second line blank, followed author name(s).first line start single hashtag #, followed single whitespace, title.additional single hashtag headers chapter. (, new chapters created.)hashtag headers followed numbers since hashtags create numbered subheadings. Correct: ## Subheading. Incorrect: ## 3. Subheading.file contains setup chunk .Rmd file, contain setup label. (bookdown render fail duplicate chunk labels.)\n.e. use {r, include=FALSE} instead {r setup, include=FALSE}.\nSee sample .RmdLinks internal files must contain resources/<project_name>/ path, : ![Test Photo](resources/sample_project/election.jpg)file contain install.packages(), write functions, setwd(), getwd().’s anything else looks odd ’re sure, assign jtr13 review explain issue.","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"request-changes","chapter":"11 Tutorial for pull request mergers","heading":"11.6 Request changes","text":"problems checks listed , explain pull request merged request changes following steps:, add changes requested label pull request.job pull request done now. contributors fix requests, review either move forward merge explain changes still need made.","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"steps-to-merge-the-pr","chapter":"11 Tutorial for pull request mergers","heading":"11.7 Steps to Merge the PR","text":"Go main branch project (jtr13/cc22spring) open _bookdown.yml fileGo main branch project (jtr13/cc22spring) open _bookdown.yml fileCopy entire rmd_files section. look something like \nrmd_files: [ 'index.Rmd', # must first chapter 'assignment.Rmd', ...., ...., ]Copy entire rmd_files section. look something like \nrmd_files: [ 'index.Rmd', # must first chapter 'assignment.Rmd', ...., ...., ]Open branch submitted PR following steps:\naccess PR branch:\n\nMake sure PR branch checking PR branch name shown (main):\nOpen branch submitted PR following steps:access PR branch:Make sure PR branch checking PR branch name shown (main):Remove rmd_files: [] section paste one copied main branch project.Remove rmd_files: [] section paste one copied main branch project.Add name new file single quotes followed comma labelled section (eg. Cheatsheets, Tutorials etc).Add name new file single quotes followed comma labelled section (eg. Cheatsheets, Tutorials etc).Save edited version.Save edited version.Come back PR.Come back PR.Merge PR.Merge PR.Click Actions tabs check whether build successful (successful build green dot front actions). PLEASE NOTE actions take complete (approximately 5-6 mins depending number files rendered), might need wait time finally check whether build successful .Click Actions tabs check whether build successful (successful build green dot front actions). PLEASE NOTE actions take complete (approximately 5-6 mins depending number files rendered), might need wait time finally check whether build successful .case build fail able understand rectify please tag one PR Assigners can review . PLEASE revert merge create new branches workflow.case build fail able understand rectify please tag one PR Assigners can review . PLEASE revert merge create new branches workflow.","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"pr-leaders-only-add-part-names-to-.rmd-for-every-first-article-in-part","chapter":"11 Tutorial for pull request mergers","heading":"11.7.1 PR Leaders only: Add part names to .Rmd for every first article in part","text":"adding first chapter PART.every first article part, add chapter name top .Rmd file, propose changes. example like .\n","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"merge-pr-and-leave-a-comment","chapter":"11 Tutorial for pull request mergers","heading":"11.8 Merge PR and leave a comment","text":"Now comes final step.’re sure things correctly, assign one PR merge leaders @jtr13 review merge PR.Go back conversation tab pull requests page, example:https://github.com/jtr13/cc20/pull/23#issuecomment-728506101Leave comments congratulations 🎉 (type :tada:) click green button merge.\n","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"check-updated-version","chapter":"11 Tutorial for pull request mergers","heading":"11.9 Check updated version","text":"successful merge means addition file files added project merge conflicts. mean book render deploy GitHub pages without issues. merge, take 5-10 minutes GitHub Actions render book deploy updated version. Please check Action ran successfully didn’t, open issue link failed run.","code":""}]
